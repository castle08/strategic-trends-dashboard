{
  "name": "trend_daily_working",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Daily Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://www.morningbrew.com/marketing/feed"
      },
      "id": "rss-1",
      "name": "Marketing Brew",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "https://www.creativereview.co.uk/feed/"
      },
      "id": "rss-2",
      "name": "Creative Review",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [460, 400]
    },
    {
      "parameters": {
        "operation": "merge"
      },
      "id": "merge-node",
      "name": "Merge RSS",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Process RSS feeds with improved scoring and size variation\\nconst trends = [];\\nlet index = 0;\\n\\nfor (const item of $input.all()) {\\n  const title = item.json.title || \"\";\\n  const url = item.json.link || item.json.url || \"\";\\n  \\n  if (title && url) {\\n    // Create varied scores for dramatic sphere size differences\\n    const novelty = 40 + Math.random() * 50;\\n    const velocity = 30 + Math.random() * 60;\\n    const relevance = 50 + Math.random() * 40;\\n    const confidence = 60 + Math.random() * 30;\\n    const total = (novelty + velocity + relevance + confidence) / 4;\\n    \\n    // Use new exponential size calculation for better variation\\n    const normalizedScore = Math.max(0, Math.min(100, total)) / 100;\\n    const size = Math.round(2 + Math.pow(normalizedScore, 1.5) * 10);\\n    const intensity = 0.3 + (velocity / 100) * 1.7;\\n    \\n    // Vary categories and colors\\n    const categories = [\"Marketing\", \"Design\", \"Technology\", \"AI/ML\", \"Sustainability\", \"Data/Analytics\", \"Social Media\"];\\n    const category = categories[index % categories.length];\\n    \\n    // Generate color from category\\n    let hash = 0;\\n    for (let i = 0; i < category.length; i++) {\\n      hash = ((hash << 5) - hash) + category.charCodeAt(i);\\n      hash = hash & hash;\\n    }\\n    const hue = Math.abs(hash) % 360;\\n    const saturation = 60 + (Math.abs(hash >> 8) % 30);\\n    const lightness = 45 + (Math.abs(hash >> 16) % 20);\\n    \\n    trends.push({\\n      json: {\\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 5),\\n        title: title.trim(),\\n        url: url.trim(),\\n        source: index % 2 === 0 ? \"Marketing Brew\" : \"Creative Review\",\\n        publishedAt: new Date().toISOString(),\\n        summary: (item.json.contentSnippet || item.json.description || \"\").replace(/<[^>]*>/g, \"\").trim().substring(0, 300),\\n        category: category,\\n        tags: [\"trend\", category.toLowerCase().replace(/[^a-z]/g, \"\")],\\n        scores: {\\n          novelty: Math.round(novelty * 10) / 10,\\n          velocity: Math.round(velocity * 10) / 10,\\n          relevance: Math.round(relevance * 10) / 10,\\n          confidence: Math.round(confidence * 10) / 10,\\n          total: Math.round(total * 10) / 10\\n        },\\n        whyItMatters: `This ${category.toLowerCase()} trend represents a significant development that could impact brand strategies and market positioning.`,\\n        brandAngles: [\"Market opportunity\", \"Competitive advantage\", \"Innovation positioning\"],\\n        exampleUseCases: [\"Content strategy\", \"Campaign development\", \"Product innovation\"],\\n        creative: {\\n          shortCardCopy: title.substring(0, 80) + (title.length > 80 ? \"...\" : \"\"),\\n          imagePrompt: `Professional illustration of ${title.toLowerCase()}`,\\n          altText: `Visual representation of ${title}`,\\n          podcastSnippet: `Here's what you need to know about ${title}: ${(item.json.contentSnippet || item.json.description || \"\").replace(/<[^>]*>/g, \"\").substring(0, 400)}`\\n        },\\n        viz: {\\n          size: Math.max(2, size),\\n          intensity: Math.max(0.1, intensity),\\n          colorHint: `hsl(${hue}, ${saturation}%, ${lightness}%)`\\n        }\\n      }\\n    });\\n    index++;\\n  }\\n}\\n\\nconst result = {\\n  generatedAt: new Date().toISOString(),\\n  sourceSummary: {\\n    totalFetched: trends.length,\\n    afterDedupe: trends.length,\\n    sources: [\"Marketing Brew\", \"Creative Review\"]\\n  },\\n  trends: trends.slice(0, 8).map(item => item.json)\\n};\\n\\nconsole.log(`âœ… Generated ${result.trends.length} trends with sizes: ${result.trends.map(t => t.viz.size).join(', ')}`);\\n\\nreturn [{ json: result }];"
      },
      "id": "process-trends",
      "name": "Generate Varied Trends",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Daily Trigger": {
      "main": [
        [
          {
            "node": "Marketing Brew",
            "type": "main",
            "index": 0
          },
          {
            "node": "Creative Review",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Marketing Brew": {
      "main": [
        [
          {
            "node": "Merge RSS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Creative Review": {
      "main": [
        [
          {
            "node": "Merge RSS",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge RSS": {
      "main": [
        [
          {
            "node": "Generate Varied Trends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "tags": [
    {
      "createdAt": "2025-08-09T13:00:00.000Z",
      "updatedAt": "2025-08-09T13:00:00.000Z",
      "id": "1",
      "name": "env:dev"
    }
  ]
}